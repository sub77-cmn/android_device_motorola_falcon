From 06960c7bdf3c6cddbecafd44b850bb3774465dc9 Mon Sep 17 00:00:00 2001
From: DvTonder <david.vantonder@gmail.com>
Date: Thu, 15 Sep 2016 17:21:42 +0530
Subject: [PATCH] Settings: Add Advanced reboot (1 of 2)

This commit adds a setting in Development settings for including options
in the power menu for rebooting into recovery or bootloader, defauled to
off.

When enabled, the Advanced reboot options will only be available once the
device is unlocked.

Change-Id: Ib77f0be178d15131b99adbe0abb6ba18b2b7c0b6

From: jackmu95 <jacob.mueller.elz@gmail.com>
Settings: Move 'Advanced reboot' to other position

This commit moves the 'Advanced reboot' checkbox one item down
because it looks a bit strange as first element in the list IMHO.

Before: http://goo.gl/jhw8h
After:  http://goo.gl/X3H68

Change-Id: I26d4a5caba3e720b952ec405e200c1528f7a7321

From: ThiagoVinicius <thiagovfar@gmail.com>
Development Settings: fix setting reset on disable

When Development Settings are disabled, some settings are
reset to values other than the default. This fixes it.

 - No need to have resetAdvancedReboot(), as it is already
   reset by the "unckeck all checkboxes" logic.

Change-Id: I1bc432851e5debc2d58045a8068b4cf4903b09c4
Signed-off-by: Hriday Sharma <hridaysharma42@gmail.com>
---
 res/values/cm_strings.xml                         |  4 ++++
 res/xml/development_prefs.xml                     |  5 +++++
 src/com/android/settings/DevelopmentSettings.java | 22 ++++++++++++++++++++++
 3 files changed, 31 insertions(+)

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 31e61a8..d37ea11 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -225,4 +225,8 @@
     <!-- Lights settings -->
     <string name="lights_label">Lights</string>
 
+    <!-- Advanced reboot options -->
+    <string name="advanced_reboot_title">Advanced reboot</string>
+    <string name="advanced_reboot_summary">When unlocked, include options in the power menu for rebooting into recovery, bootloader or performing a soft reboot </string>
+
 </resources>
diff --git a/res/xml/development_prefs.xml b/res/xml/development_prefs.xml
index 62734c8..d953d44 100644
--- a/res/xml/development_prefs.xml
+++ b/res/xml/development_prefs.xml
@@ -33,6 +33,11 @@
             android:title="@*android:string/bugreport_title"
             android:dialogTitle="@*android:string/bugreport_title" />
 
+    <SwitchPreference
+        android:key="advanced_reboot"
+        android:title="@string/advanced_reboot_title"
+        android:summary="@string/advanced_reboot_summary" />
+
     <PreferenceScreen
             android:key="local_backup_password"
             android:title="@string/local_backup_password_title"
diff --git a/src/com/android/settings/DevelopmentSettings.java b/src/com/android/settings/DevelopmentSettings.java
index d3129c7..20de1ca 100644
--- a/src/com/android/settings/DevelopmentSettings.java
+++ b/src/com/android/settings/DevelopmentSettings.java
@@ -56,6 +56,8 @@ import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.service.persistentdata.PersistentDataBlockManager;
 import android.os.UserManager;
+import android.preference.CheckBoxPreference;
+import android.preference.ListPreference;
 import android.os.storage.IMountService;
 import android.provider.SearchIndexableResource;
 import android.provider.Settings;
@@ -205,6 +207,8 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
 
     private static final String TERMINAL_APP_PACKAGE = "com.android.terminal";
 
+    private static final String ADVANCED_REBOOT_KEY = "advanced_reboot";
+
     private static final String KEY_CONVERT_FBE = "convert_to_file_encryption";
 
     private static final String OTA_DISABLE_AUTOMATIC_UPDATE_KEY = "ota_disable_automatic_update";
@@ -308,6 +312,8 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
     private Object mSelectedRootValue;
     private PreferenceScreen mDevelopmentTools;
 
+    private SwitchPreference mAdvancedReboot;
+
     private final ArrayList<Preference> mAllPrefs = new ArrayList<Preference>();
 
     private final ArrayList<SwitchPreference> mResetSwitchPrefs
@@ -390,12 +396,14 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         mForceAllowOnExternal = findAndInitSwitchPref(FORCE_ALLOW_ON_EXTERNAL_KEY);
         mPassword = (PreferenceScreen) findPreference(LOCAL_BACKUP_PASSWORD);
         mAllPrefs.add(mPassword);
+	mAdvancedReboot = findAndInitSwitchPref(ADVANCED_REBOOT_KEY);
 
         if (!mUm.isAdminUser()) {
             disableForUser(mEnableAdb);
             disableForUser(mClearAdbKeys);
             disableForUser(mEnableTerminal);
             disableForUser(mPassword);
+	    disableForUser(mAdvancedReboot);
         }
 
         mDebugAppPref = findPreference(DEBUG_APP_KEY);
@@ -738,6 +746,18 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         }
         updateBluetoothDisableAbsVolumeOptions();
         updateRootAccessOptions();
+        updateAdvancedRebootOptions();
+    }
+
+    private void writeAdvancedRebootOptions() {
+        Settings.Secure.putInt(getActivity().getContentResolver(),
+                Settings.Secure.ADVANCED_REBOOT,
+                mAdvancedReboot.isChecked() ? 1 : 0);
+    }
+
+    private void updateAdvancedRebootOptions() {
+        mAdvancedReboot.setChecked(Settings.Secure.getInt(getActivity().getContentResolver(),
+                Settings.Secure.ADVANCED_REBOOT, 0) != 0);
     }
 
     private void resetDangerousOptions() {
@@ -1967,6 +1987,8 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
             writeColorTemperature();
         } else if (preference == mUSBAudio) {
             writeUSBAudioOptions();
+        } else if (preference == mAdvancedReboot) {
+            writeAdvancedRebootOptions();
         } else if (preference == mForceResizable) {
             writeForceResizableOptions();
         } else if (INACTIVE_APPS_KEY.equals(preference.getKey())) {
-- 
2.7.4

